<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="exura vita" spell="Salvation" condition="Health Percent below" conditionMin="60" conditionMax="60" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="300" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="exura gran" spell="Divine Healing" condition="Health Percent below" conditionMin="75" conditionMax="75" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="220" spamMax="330" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="exura" spell="Light Healing" condition="Health Percent below" conditionMin="90" conditionMax="90" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="350" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes"/>
        <ConditionHealer enabled="yes">
            <HealRule name="Paral" spell="Light Healing" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="yes"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="Screenshot Taker" script="init start&#10;&#10;    local UseSmartScreenshot = true&#10;&#10;    local Skills = {&#10;    &#9;-- Downgrades&#10;    &#9;Death =&#9;true,&#10;&#10;    &#9;-- Upgrades&#10;    &#9;Level =&#9;true,&#10;    &#9;Magic =&#9;true,&#10;    &#9;Fist =&#9;true,&#10;    &#9;Axe =&#9;true,&#10;    &#9;Club =&#9;true,&#10;    &#9;Sword =&#9;true,&#10;    &#9;Distance =&#9;true,&#10;    &#9;Shielding =&#9;true,&#10;    &#9;Fishing =&#9;true,&#10;    }&#10;&#10;    -- DO NOT EDIT BELOW --&#10;&#10;    local screenShotFunc = function(a)&#10;    &#9;if UseSmartScreenshot and smartscreenshot ~= nil then&#10;    &#9;&#9;return smartscreenshot(a)&#10;    &#9;end&#10;&#10;    &#9;return screenshot(a)&#10;    end&#10;init end&#10;&#10;auto(400, 800)&#10;foreach newmessage m do&#10;    if m.type == MSG_STATUS or m.type == MSG_ADVANCE then&#10;    &#9;local Skill = m.content:match('You advanced .- (.-)[%s%.].-')&#10;&#10;    &#9;if Skill and Skills[Skill:capitalize()] then&#10;    &#9;&#9;screenShotFunc(string.format('Advance_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;    &#9;end&#10;    end&#10;end&#10;&#10;if Skills.Death and $dead then&#10;    screenShotFunc(string.format('Death_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;    repeat&#10;    &#9;wait(1000)&#10;    until not $dead&#10;end" enabled="yes"/>
            <PersistentScript name="Backpacks" script="auto(500)&#10;MainBP = {name = getuseroption(&quot;MainBP&quot;), destination = &quot;back&quot;}&#10;SuppBP = {name = getuseroption(&quot;SuppBP&quot;), destination = getuseroption(&quot;MainBP&quot;)}&#10;LootBP = {name = getuseroption(&quot;LootBP&quot;), destination = getuseroption(&quot;MainBP&quot;)}&#10;GoldBP = {name = getuseroption(&quot;GoldBP&quot;), destination = getuseroption(&quot;MainBP&quot;)}&#10;MainDpBp = {name = getuseroption(&quot;MainDpBp&quot;), destination = &quot;Depot Chest&quot;}&#10;StackBP = {name = getuseroption(&quot;StackBP&quot;), destination = getuseroption(&quot;MainDpBp&quot;)}&#10;RareBP = {name = getuseroption(&quot;RareBP&quot;), destination = getuseroption(&quot;MainDpBp&quot;)}&#10;RingBP = {name = getuseroption(&quot;RingBP&quot;), destination = &quot;Depot Chest&quot;}&#10;&#10;&#10;setlootingdestination(&quot;mainbp&quot;, getuseroption(&quot;MainBP&quot;))&#10;setlootingdestination(&quot;goldbp&quot;, getuseroption(&quot;GoldBP&quot;))&#10;setlootingdestination(&quot;suppbp&quot;, getuseroption(&quot;SuppBP&quot;))&#10;setlootingdestination(&quot;lootbp&quot;, getuseroption(&quot;LootBP&quot;))&#10;setlootingdestination(&quot;maindpbp&quot;, getuseroption(&quot;MainDpBp&quot;))&#10;setlootingdestination(&quot;stackbp&quot;, getuseroption(&quot;StackBP&quot;))&#10;setlootingdestination(&quot;rarebp&quot;, getuseroption(&quot;RareBP&quot;))&#10;setlootingdestination(&quot;ringbp&quot;, getuseroption(&quot;RingBP&quot;))&#10;&#10;setsetting('Looting/LootList/red piece of cloth/SellPrice', getuseroption(&quot;Red&quot;))&#10;setsetting('Looting/LootList/blue piece of cloth/SellPrice', getuseroption(&quot;Blue&quot;))&#10;setsetting('Looting/LootList/green piece of cloth/SellPrice', getuseroption(&quot;Green&quot;))&#10;setsetting('Looting/LootList/sword ring/SellPrice', getuseroption(&quot;Sword&quot;))&#10;setsetting('Looting/LootList/stealth ring/SellPrice', getuseroption(&quot;Ring&quot;))&#10;&#10;&#10;-- gold coins&#10;&#10;if $cap &lt; getuseroption(&quot;StopGold&quot;) or not getuseroption(&quot;LootGold&quot;) then&#10;   setsetting('Looting/LootList/gold coin/Action', 'Ignore')&#10;else&#10;   setsetting('Looting/LootList/gold coin/Action', 'Loot') &#10;end&#10;&#10;&#10;if getuseroption(&quot;LootGold&quot;, true)  then&#10;   showuseroption(&quot;StopGold&quot;, true)&#10;   showuseroption(&quot;GoldBP&quot;, true)&#10;else&#10;   showuseroption(&quot;StopGold&quot;, false)&#10;   showuseroption(&quot;GoldBP&quot;, false)&#10;end&#10;&#10;if $timems-$playerlastseen &lt; 10000 or paround(10) &gt; 0 then&#10;   setsetting('Targeting/MustBeShootable', 'yes')&#10;else&#10;   setsetting('Targeting/MustBeShootable', 'no')&#10;end&#10;&#10;&#10;--if getuseroption(&quot;UseMasSan&quot;) then&#10;  -- setsetting('Targeting/Creatures/Category A_2+/Setting1/FirstSpell', 'No Spell')&#10; --  setsetting('Targeting/Creatures/Category A_2+/Setting1/Distance', '4')&#10;--else&#10;  -- setsetting('Targeting/Creatures/Category A_2+/Setting1/FirstSpell', 'Divine Missile')&#10;  -- setsetting('Targeting/Creatures/Category A_2+/Setting1/Distance', '4')&#10;--end&#10;&#10;&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Haste" script="auto(100)&#10;&#10;if $wptsection ~= &quot;Hunt&quot; and not $hasted and not $pzone and $standtime &lt; 2000 then&#10;&#9;cast(&quot;utani hur&quot;)&#10;&#9;waitping()&#10;end" enabled="yes"/>
            <PersistentScript name="Food" script="auto(120000, 250000) &#10;listas(&quot;dontlist&quot;)&#10;eatfoodfull()" enabled="yes"/>
            <PersistentScript name="Globals" script="function lowsupplies()&#10;  return itemcount(getuseroption(&quot;AmmoName&quot;), &quot;all&quot;) &lt;= getuseroption(&quot;AmmoToLeave&quot;) or itemcount(&quot;strong mana potion&quot;, &quot;all&quot;) &lt;= getuseroption(&quot;MpToLeave&quot;) or $stamina &lt; getuseroption(&quot;StaminaCheck&quot;)*60&#10;end&#10;&#10;&#10;function isInLuringArray(arr, value)&#10;    for _, v in ipairs(arr) do&#10;        if (v:lower() == value:lower()) then&#10;            return true&#10;        end&#10;    end&#10;    return false&#10;end&#10;&#10;function MonstersAround() &#10;&#9; start = 0&#10;&#9;&#9;foreach creature m &quot;mf&quot; do&#10;&#9;&#9;if table.find({&quot;Dark Torturer&quot;, &quot;Grim Reaper&quot;, &quot;Hellspawn&quot;, &quot;Destroyer&quot;}, m.name) and m.dist &lt;= 9 and m.isreachable then &#10;&#9;&#9;&#9;&#9;start = start + 1&#10;&#9;&#9;end&#10;&#9;end&#10;    return start&#10;end&#10;&#10;function sail(npc, city)&#10;  reachcreature(npc)&#10;  wait(1200,1500)&#10;  say(&quot;hi&quot;)&#10;  wait(1200,1560)&#10;  npcsay(city)&#10;  wait(500,1000)&#10;  npcsay(&quot;yes&quot;)&#10;  wait(200,300)&#10;end&#10;&#10;&#10;function beep()&#10;    return playsound('playeronscreen.wav')&#10;end&#10;&#10;function OnlyTargOn()&#10;    while getsetting(&quot;Targeting/Enabled&quot;) == &quot;no&quot; do&#10;        setsetting(&quot;Targeting/Enabled&quot;, &quot;yes&quot;)&#10;    end&#10;    waitping(4,5)&#10;end&#10;&#10;function OnlyTargOff()&#10;    while getsetting(&quot;Targeting/Enabled&quot;) == &quot;yes&quot; do&#10;        setsetting(&quot;Targeting/Enabled&quot;, &quot;no&quot;)&#10;    end&#10;end&#10;&#10;function OnlyLootingOn()&#10;   while getsetting('Looting/Enabled') == 'no' do&#10;         setlooting('yes')&#10;   end&#10;end&#10;&#10;function OnlyLootingOff()&#10;   while getsetting('Looting/Enabled') == 'yes' do&#10;         setlooting('no')&#10;   end&#10;end&#10;&#10;function TargOff()&#10;   while getsetting('Targeting/Enabled') == 'yes' do&#10;         settargeting('no')&#10;   end&#10;   while getsetting('Looting/Enabled') == 'yes' do&#10;         setlooting('no')&#10;   end&#10;end&#10;&#10;function TargOn()&#10;   while getsetting('Targeting/Enabled') == 'no' do&#10;         settargeting('yes')&#10;   end&#10;   while getsetting('Looting/Enabled') == 'no' do&#10;         setlooting('yes')&#10;   end&#10;   waitping(7,8)&#10;end&#10;&#10;&#10;function DrinkManaPotion()&#10;    if (cooldown(SPELL_GROUP_ATTACK) &gt; 500 and $mppc &lt; 90 and $hppc &gt; 50 and MonstersAround() &gt; 0) or (MonstersAround() == 0 and $mppc &lt; 90 and $hppc &gt; 50) then&#10;       useoncreature('strong mana potion', $self)&#10;       wait(300)&#10;    end&#10;end&#10;&#10;function settrap(kurwa, ...)&#10;&#9;local Mobs = {...}&#10;&#10;&#9;for _, Mobs in ipairs(Mobs) do&#10;&#9;&#9;setsetting('Targeting/Creatures/'..Mobs..'/Setting1/OnlyIfTrapped', kurwa)&#10;&#9;&#9;setsetting('Targeting/Creatures/'..Mobs..'/Setting2/OnlyIfTrapped', kurwa)&#10;&#9;&#9;setsetting('Targeting/Creatures/'..Mobs..'/Setting3/OnlyIfTrapped', kurwa)&#10;&#9;&#9;setsetting('Targeting/Creatures/'..Mobs..'/Setting4/OnlyIfTrapped', kurwa)&#10;&#9;end&#10;end&#10;&#10;&#10;function setstance(stance, ...)&#10;    local Monsters = {...}&#10;&#10;&#9;for _, Monsters in ipairs(Monsters) do&#10;       setsetting('Targeting/Creatures/'..Monsters..'/Setting1/Stance', stance)&#10;      -- setsetting('Targeting/Creatures/'..Monsters..'/Setting2/Stance', stance)&#10;       setsetting('Targeting/Creatures/'..Monsters..'/Setting3/Stance', stance)&#10;       setsetting('Targeting/Creatures/'..Monsters..'/Setting4/Stance', stance)&#10;&#9;end&#10;end&#10;&#10;&#10;&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Leonardo Furniture Trap" script="auto(1500)&#10;&#10;antifurnituretrap('machete', 100)&#10;wait(2000)&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Spells Attack" script="auto(100)&#10;&#10;&#10;-- mobs/retro&#10;local pvp = getuseroption(&quot;pvp&quot;)&#10;local mobs = {&quot;Dark Torturer&quot;, &quot;Grim Reaper&quot;, &quot;Hellspawn&quot;, &quot;Destroyer&quot;}&#10;&#10;-- use mas san..&#10;local UseMasSan = getuseroption(&quot;UseMasSan&quot;)&#10;local MinMasSan = getuseroption(&quot;ToMasSan&quot;)&#10;&#10;--isonspellarea(&quot;Grim Reaper&quot;, &quot;exevo mas san&quot;, &quot;any&quot;)&#10;&#10;if $wptsection == &quot;Hunt&quot; then&#10;  if (cancastspell(&quot;exevo mas san&quot;)) and (maroundspell(&quot;exevo mas san&quot;, &quot;any&quot;, unpack(mobs)) &gt;= MinMasSan) and (not pvp or $timems - $playerlastseen &gt; 12000) and (UseMasSan) and ($mppc &gt; 50) then  &#10;      pausewalking(500)     &#10;      cast('exevo mas san') &#10;      wait(200)&#10;  end&#10;end" enabled="yes"/>
            <PersistentScript name="Pathfinding Fixer" script="auto(400)&#10;&#10;local function setspecialarea(policy, ...)&#10;  local areas = {...}&#10;&#9;for _, areas in ipairs(areas) do&#10;      setsetting('Cavebot/SpecialAreas/'..areas..'/Policy', policy)&#10;&#9;end&#10;end&#10;&#10;&#10;-- First Flooor&#10;--if ($posy &gt; 31955 and $wptid &lt; 18 and not ReachingHydra()) or ($wptid &gt;= 18 and $targetingtarget and not ReachingHydra()) then&#10;   --setspecialarea(&quot;None&quot;, &quot;Open1&quot;)--&#10;--else&#10;  -- setspecialarea(&quot;Targeting&quot;, &quot;Open1&quot;)&#10;--end&#10;&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Mana Pomper" script="auto(200)&#10;&#10;DrinkManaPotion()" enabled="yes"/>
            <PersistentScript name="Demonic Shaker" script="auto(1000)&#10;&#10;while itemcount(&quot;concentrated demonic blood&quot;, getuseroption(&quot;LootBP&quot;)) &gt; 0 and maround(3) == 0 do&#10;      useitem(&quot;concentrated demonic blood&quot;)&#10;      wait(400)&#10;end" enabled="yes"/>
            <PersistentScript name="Rusty Armors" script="init start&#10;&#10;&#9;local IgnoreCommon = true&#10;&#9;local DropTrash = true&#10;&#9;local MinValue = 1500&#10;    local rusty = {8896, 8899}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#10;init end&#10;&#10;auto(1000, 2000)&#10;&#10;if itemcount('flask of rust remover', 'all') &gt; 0 and (itemcount(8896, 'all') &gt; 0 or itemcount(8899, 'all') &gt; 0) then&#10;  if maround(3) == 0 and $lootsaround == 0 then&#10;      pausewalking(1000)&#10;      unrust(IgnoreCommon, DropTrash, MinValue)&#10;      wait(400,600)&#10;  end&#10;end" enabled="yes"/>
            <PersistentScript name="Anty Lure" script="auto(500)&#10;&#10;--print(GrimsAround())&#10;&#10;if ($posz == 8 and MonstersAround() &gt;= getuseroption(&quot;AmmountToAntyLure&quot;) and getuseroption(&quot;UseAntyLure&quot;)) or ($posz == 8 and maround(7, &quot;Demon&quot;, &quot;Juggernaut&quot;, &quot;Hellhound&quot;) &gt;= 1) then&#10;      setsetting('Targeting/Creatures/Category A_1/Setting1/OnlyIfTrapped', 'yes') &#10;      setsetting('Targeting/Creatures/Category A_2+/Setting1/OnlyIfTrapped', 'yes')&#10;      stopattack() &#10;      OnlyTargOn()&#10;      OnlyLootingOff()&#10;      if not $hasted then&#10;            cast('utani hur')&#10;      end&#10;     gotolabel(0, &quot;Leave&quot;)&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="Luring" script="auto(400)&#10;&#10;&#10;setlurelocation(33454, 31720, 8) &#10;&#10;&#10;if ($posy &gt; 31726) or ($posx &gt; 33462) then&#10;   setsetting('Targeting/Creatures/Category A_2+/Setting1/Stance', 'Wait &amp; Lure &amp; Keep Away')&#10;   setsetting('Targeting/Creatures/Category A_1/Setting1/Stance', 'Wait &amp; Lure &amp; Keep Away')&#10;else&#10;   setsetting('Targeting/Creatures/Category A_2+/Setting1/Stance', 'Keep Away')&#10;   setsetting('Targeting/Creatures/Category A_1/Setting1/Stance', 'Keep Away')   &#10;end" enabled="yes"/>
            <PersistentScript name="DT" script="auto(200)&#10;&#10;if MonstersAround() &lt; 3 and $attacked.name == &quot;Dark Torturer&quot; and $attacked.hppc &lt; 18 then&#10;   setsetting('Targeting/Creatures/Category A_2+/Setting1/Distance', '2')&#10;   setsetting('Targeting/Creatures/Category A_1/Setting1/Distance', '2')&#10;else&#10;   setsetting('Targeting/Creatures/Category A_2+/Setting1/Distance', '4')&#10;   setsetting('Targeting/Creatures/Category A_1/Setting1/Distance', '4')&#10;end&#10;" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="RecentLoot" script="init start&#10;&#9;-- SCRIPT_VERSION = '1.1.1'&#10;&#9;local warnItems = {'vile axe', 'steel boots', 'nightmare blade', 'skullcracker armor', 'glacier kilt', 'golden legs', 'skull helmet', 'giant sword', 'gold ingot', 'jewelled backpack', 'warrior helmet', 'medusa shield', 'royal helmet', 'paladin armor', 'knight armor', 'guardian shield', 'red piece of cloth', 'green piece of cloth', 'blue piece of cloth', 'knight legs', 'cowtana', &quot;mooh'tah plate&quot;, 'mino shield', 'spiked squelcher', 'gearwheel chain', 'alloy legs', 'metal bat', 'underworld rod', 'metal spats', 'ice rapier', 'spike sword', 'mini mummy', 'boots of haste', 'noble axe', 'skull staff', 'silver raid token'} -- you can add more items here&#10;&#9;local maxMsgs = 13 -- max lines to display at once&#10;&#9;local msgTimeOut = 190000 -- will only show loots from the last 30 seconds&#10;&#10;&#9;local position = 'left' -- right or left&#10;&#9;local rareLootColor = &quot;green&quot;&#10;&#9;local lootColor = &quot;white&quot;&#10;&#10;&#9;-- dont edit anything below this line&#10;&#9;local fontsize = 7&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;local isRight = (position == 'right')&#10;&#9;local msgs = {}&#10;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 75, lootColor, 1, 0x002200)&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;foreach newmessage m do&#10;&#9;if m.level == 0 and m.content:sub(0,8) == 'Loot of ' then&#10;&#9;&#9;local msgInfo = m.content:lootmsg()&#10;&#9;&#9;local color = lootColor&#10;&#9;&#9;local hasItems = false&#10;&#10;&#9;&#9;local msg = msgInfo.name .. ': '&#10;&#10;&#9;&#9;local lastIndex = #msgInfo.items&#10;&#9;&#9;for index, item in ipairs(msgInfo.items) do&#10;&#9;&#9;&#9;hasItems = true&#10;&#10;&#9;&#9;&#9;if (item.count &gt; 1) then&#10;&#9;&#9;&#9;&#9;msg = msg .. item.count .. ' '&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;msg = msg .. item.name&#10;&#9;&#9;&#9;if index ~= lastIndex then&#10;&#9;&#9;&#9;&#9;msg = msg .. ', '&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;if table.find(warnItems, item.name) then&#10;&#9;&#9;&#9;&#9;color = rareLootColor&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (hasItems) then&#10;&#9;&#9;&#9;local msgWidth = measurestring(msg)&#10;&#9;&#9;&#9;table.insert(msgs, {['msg'] = msg, ['color'] = color, ['time'] = $timems, ['width'] = msgWidth})&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;local msgsLen = #msgs&#10;local longestLine = 0&#10;if isRight then&#10;&#9;for index = msgsLen, math.max(msgsLen - maxMsgs + 1, 1), -1 do&#10;&#9;&#9;if msgs[index].width &gt; longestLine then longestLine = msgs[index].width end&#10;&#9;end&#10;end&#10;&#10;local i = 1&#10;while (i &lt;= msgsLen) do&#10;&#9;if $timems - msgs[i].time &lt;= msgTimeOut and i &gt; msgsLen - maxMsgs then&#10;&#9;&#9;setfontcolor(msgs[i].color)&#10;&#9;&#9;addtext(msgs[i].msg, tern(isRight, longestLine - msgs[i].width + 2, 2), i*fontspacing)&#10;&#10;&#9;&#9;i = i + 1&#10;&#9;else&#10;&#9;&#9;table.remove(msgs, i)&#10;&#9;end&#10;&#10;&#9;msgsLen = #msgs&#10;end&#10;&#10;if not isRight then&#10;&#9;setposition($worldwin.left + 3, $worldwin.bottom - i*fontspacing)&#10;else&#10;&#9;setposition($worldwin.right - 3 - longestLine, $worldwin.bottom - i*fontspacing)&#10;end&#10;&#10;if msgsLen == 0 then -- to clear HUD when resetting script&#10;&#9;addtext('', 0, 0)&#10;end" enabled="yes" refreshRate="1000"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local function deleteSpecialAreaCall(menu)&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaName()&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaCall(menu)&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaName()&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaCall(menu)&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#10;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#10;&#9;local specialAreaRect = {}&#10;&#9;local innerRect = {}&#10;&#10;&#9;local function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;local function getAreaRect(x, y, w, h)&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#10;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return ret&#10;&#9;end&#10;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#10;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#10;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#10;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedSP then&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedSP then&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="NewHUDScript" script="drawtext(&quot;Z:&quot;, 300, 70)&#10;drawtext($posz, 360, 70)&#10;drawtext(&quot;ID:&quot;, 430, 70)&#10;drawtext(cursorinfo().id, 460, 70)&#10;drawtext(&quot;X:&quot;, 300, 90)&#10;drawtext($posx, 360, 90)&#10;drawtext(&quot;Y:&quot;, 300, 110)&#10;drawtext($posy, 360, 110)" enabled="no" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;        MMH.COLORS = {}&#10;        MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;        MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(97, 105, 36, 20), 0.23, color(105, 114, 39, 20), 0.76, color(55, 60, 21, 20)}&#10;        MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#10;        MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(120, 120, 120, 20), 0.23, color(100, 100, 100, 20), 0.76, color(35, 35, 35, 20)}&#10;        MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;        MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;        MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;                killCount.reset('Hydra')&#10;                killCount.reset('The Many')&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;www.eliscripts.com&quot;,&#10;        Creator = &quot;Eli Scripts&quot;,&#10;        Info = '[RP] Oramond Dungeon: Catacombs',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;}&#10;&#10;&#10;    local HUD_Colors = {&#10;                Font = color(255, 255, 255, 0),&#10;                SectionHeaderBackground = {0.0, color(97, 105, 36, 20), 0.23, color(105, 114, 39, 20), 0.76, color(55, 60, 21, 20)},&#10;                EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;                EntryValueBackground = {0.0, color(120, 120, 120, 20), 0.23, color(100, 100, 100, 20), 0.76, color(35, 35, 35, 20)},&#10;                EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;                EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;        }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonsterInfo" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.1'&#13;&#10;&#9;&#13;&#10;&#9;useworldhud()&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;setfontstyle(&quot;Tahoma&quot;, 7, 100, 0x00C000, 1, 0x000000)&#13;&#10;&#13;&#10;foreach creature c &quot;ms&quot; do&#13;&#10;&#9;local monsterinfo = creatureinfo(c.name)&#13;&#10;&#9;if ( monsterinfo.hp &gt; 0 ) then&#13;&#10;&#9;&#9;local r = getbararea(c)&#13;&#10;&#9;&#9;if ( r ) then&#13;&#10;&#9;&#9;&#9;local text = math.ceil(monsterinfo.hp * math.min(c.hppc + 0.5, 100) / 100) .. &quot; / &quot; .. monsterinfo.hp&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;setfontcolor(c.hpcolor)&#13;&#10;&#9;&#9;&#9;drawtext(text, r.left - measurestring(text)/2 + 14, r.top + 2)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="GeneralInfo" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#13;&#10;&#9;&#13;&#10;&#9;local fontsize = 10&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#13;&#10;&#9;&#13;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#13;&#10;&#9;local maxsize = 220&#13;&#10;&#9;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(100)&#13;&#10;local info = {&#13;&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#13;&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#13;&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#13;&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#13;&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#13;&#10;}&#13;&#10;&#13;&#10;if (displayontitle) then&#13;&#10;&#9;local x = 0&#13;&#10;&#9;for _,j in ipairs(info) do&#13;&#10;&#9;&#9;local str = j.text .. j.value&#13;&#10;&#9;&#9;local w = measurestring(str)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(str, x, 0)&#13;&#10;&#9;&#9;x = x + w + 50&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#13;&#10;else&#13;&#10;&#9;for i,j in ipairs(info) do&#13;&#10;&#9;&#9;local w = measurestring(j.value)&#13;&#10;&#9;&#9;local posy = (i-1)*fontspacing&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(j.text, 2, posy)&#13;&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="SSTaker" script="init start&#13;&#10;-- local SCRIPT_VERSION = '1.0.1'&#13;&#10;&#13;&#10;-- screenshot options&#13;&#10;&#13;&#10;local saveOriginal = true&#9;&#9;&#9;-- save full original, unaltered screenshot&#13;&#10;local createWorldVersion = true&#9;&#9;-- create a version of the screenshot that only shows the world area&#13;&#10;local createFullVersion = true&#9;&#9;-- create a version of the screenshot that shows the whole client&#13;&#10;local focusClient = true&#9;&#9;&#9;-- focus client before taking the screenshot&#13;&#10;local drawHuds = true&#9;&#9;&#9;&#9;-- if desktop composition is enabled (Windows Vista, 7 or 8), draw HUDs on SS&#13;&#10;local relocateHuds = true&#9;&#9;&#9;-- draws the huds at a custom location on the screenshot (need desktop composition enabled)&#13;&#10;local compressionQuality = 100&#9;&#9;-- file compression rate, values ranging from 1 to 100&#13;&#10;&#13;&#10;-- hud locations, relative to world window. negative coordinates will be right / bottom aligned&#13;&#10;local relocateLocations = {&#13;&#10;&#9;{ name = &quot;GeneralInfo&quot;, x = 4, y = -20 },&#13;&#10;&#9;{ name = &quot;MonitorMyStats&quot;, x = 0, y = 0 },&#13;&#10;&#9;{ name = &quot;MonitorMyHunting&quot;, x = - 242, y = 0 },&#13;&#10;}&#13;&#10;&#13;&#10;-- alteration options&#13;&#10;&#13;&#10;local showEquipment = true&#9;&#9;&#9;-- show your character equipment on world screenshot&#13;&#10;local hidePersonalInfo = true&#9;&#9;-- hide personal info on screenshot (character name)&#13;&#10;local hideHudInfo = true&#9;&#9;&#9;-- hide personal info on HUD (must be supported by HUD)&#13;&#10;&#13;&#10;-- technical settings&#13;&#10;&#13;&#10;local hideMethod = &quot;both&quot;&#9;&#9;&#9;-- &quot;shuffle&quot; = shuffle pixels, &quot;blur&quot; = blur region, &quot;both&quot; = both (strongest)&#13;&#10;local textSearchTolerance = 30&#9;&#9;-- how many % of the text for hiding we want to can be obstructed (by other text on top)&#13;&#10;&#13;&#10;-- internal setup (don't change below)&#13;&#10;&#13;&#10;-- note: textures/child_huds get rendered in the order&#13;&#10;-- they were created and not selected, needs fixing&#13;&#10;&#13;&#10;local glowTexture = createtexture()&#13;&#10;local clientTexture = createtexture()&#13;&#10;local shotTexture = createtexture()&#13;&#10;&#13;&#10;local glowRendered = false&#13;&#10;local takeScreenshot = false&#13;&#10;local fileName = 'smartss'&#13;&#10;&#13;&#10;local function renderglow()&#13;&#10;&#9;local rectSize = 34&#13;&#10;&#9;local glowSize = 4&#13;&#10;&#9;local fullSize = glowSize + rectSize + glowSize&#13;&#10;&#13;&#10;&#9;-- leave space for glow on edges&#13;&#10;&#9;selecthud(glowTexture)&#13;&#10;&#9;setfixedsize(fullSize, fullSize)&#13;&#10;&#9;&#13;&#10;&#9;-- fill with transparent color&#13;&#10;&#9;setbordercolor(-1)&#13;&#10;&#9;setfillstyle(&quot;color&quot;, -1)&#13;&#10;&#9;drawrect(0, 0, fullSize, fullSize)&#13;&#10;&#9;&#13;&#10;&#9;-- black rect in center&#13;&#10;&#9;setfillstyle(&quot;color&quot;, 0x80000000)&#13;&#10;&#9;drawrect(glowSize, glowSize, rectSize-1, rectSize-1)&#13;&#10;&#9;&#13;&#10;&#9;-- apply glow around rect&#13;&#10;&#9;drawgloweffect(0x000000, glowSize)&#13;&#10;&#9;&#13;&#10;&#9;--hudsnapshot(&quot;glow&quot;, 100)&#13;&#10;end&#13;&#10;&#13;&#10;local function copyequip()&#13;&#10;&#9;local slotLocations = {37, 2, 0, 16, 74, 16, 37, 39, 74, 53, 0, 53, 37, 76, 37, 113, 0, 90, 74, 90}&#13;&#10;&#9;local equipx, equipy = getwindowpos(&quot;equip&quot;)&#13;&#10;&#9;&#13;&#10;&#9;if equipx ~= nil then&#13;&#10;&#9;&#9;local destx = $worldwin.width - 123 - 16&#13;&#10;&#9;&#9;local desty = $worldwin.height - 155 - 16&#13;&#10;&#9;&#13;&#10;&#9;&#9;for i=1,10 do&#13;&#10;&#9;&#9;&#9;local slotx = 10 + slotLocations[i*2-1]&#13;&#10;&#9;&#9;&#9;local sloty = 4 + slotLocations[i*2]&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- add glow&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawtexture(glowTexture, destx+slotx-2, desty+sloty-2, 100)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- copy equip slot&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;&#9;&#9;drawtexture(clientTexture, destx+slotx, desty+sloty, 100, equipx - $clientwin.x + slotx, equipy - $clientwin.y + sloty, 34, 34)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;local function hideregion(r)&#13;&#10;&#9;if hideMethod == &quot;shuffle&quot; or hideMethod == &quot;both&quot; then&#13;&#10;&#9;&#9;drawshufflepixelseffect(r.left, r.top, r.width, r.height)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;if hideMethod == &quot;blur&quot; or hideMethod == &quot;both&quot; then&#13;&#10;&#9;&#9;drawblureffect(r.left, r.top, r.width, r.height, 8, 2)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;local function takeshot()&#13;&#10;&#9;if hudready(clientTexture) and hudready(shotTexture) and hudready(glowTexture) then&#13;&#10;&#9;&#9;local worldx = $worldwin.x - $clientwin.x&#13;&#10;&#9;&#9;local worldy = $worldwin.y - $clientwin.y&#13;&#10;&#9;&#9;local worldw = $worldwin.width&#13;&#10;&#9;&#9;local worldh = $worldwin.height&#13;&#10;&#13;&#10;&#9;&#9;-- grab whole client screen&#13;&#10;&#9;&#9;selecthud(clientTexture)&#13;&#10;&#9;&#9;setfixedsize($clientwin.width, $clientwin.height)&#13;&#10;&#9;&#9;grabclientwindow()&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if saveOriginal then&#13;&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.original&quot;, compressionQuality)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- hide information&#13;&#10;&#9;&#9;if hidePersonalInfo then&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- hide name in chat text in world window ($name says:)&#13;&#10;&#9;&#9;&#9;hideclienttext($name, worldx, worldy, worldw, worldh, true, hideMethod, 8, 2, textSearchTolerance)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;if createFullVersion then&#13;&#10;&#9;&#9;&#9;&#9;-- hide name in chat window&#13;&#10;&#9;&#9;&#9;&#9;hideclienttext($name, 0, worldy + worldh + 62, -194, -22, false, hideMethod, 8, 2)&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;-- hide private channel names&#13;&#10;&#9;&#9;&#9;&#9;foreach channel c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if c.outid &gt; 6 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;hideclienttext(c.name, 0, worldy + worldh + 44, -194, 16, true, hideMethod, 8, 2)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- hide name above char, in case the other way failed (text/other names on top?)&#13;&#10;&#9;&#9;&#9;local r = getnamearea($self, worldw, worldh)&#13;&#10;&#9;&#9;&#9;if r then&#13;&#10;&#9;&#9;&#9;&#9;-- map to client coordinates, and expand&#13;&#10;&#9;&#9;&#9;&#9;r.left = r.left + worldx&#13;&#10;&#9;&#9;&#9;&#9;r.top = r.top + worldy + 1&#13;&#10;&#9;&#9;&#9;&#9;r.width = r.width + 1&#13;&#10;&#9;&#9;&#9;&#9;r.height = r.height + 2&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;-- hide the region&#13;&#10;&#9;&#9;&#9;&#9;hideregion(r)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if drawHuds and not $windowsxp then&#13;&#10;&#9;&#9;&#9;-- draw huds transparently&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local i = 0&#13;&#10;&#9;&#9;&#9;while isscript(&quot;display&quot;, i) do&#13;&#10;&#9;&#9;&#9;&#9;local listname = scriptlistname(&quot;display&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;local x = nil&#13;&#10;&#9;&#9;&#9;&#9;local y = nil&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;if relocateHuds then&#13;&#10;&#9;&#9;&#9;&#9;&#9;for _, h in ipairs(relocateLocations) do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if h.name == listname then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if h.x &lt; 0 then x = worldx + worldw + h.x else x = worldx + h.x end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if h.y &lt; 0 then y = worldy + worldh + h.y else y = worldy + h.y end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;grabhud(listname, x, y)&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;i = i + 1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- restore changed defaults&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- draw windbot logo&#13;&#10;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#13;&#10;&#9;&#9;local logow, logoh = 64, 64&#13;&#10;&#9;&#9;drawimage('windbot.png', worldx + 5, worldy + worldh - (logoh + 25), 0, 0, logow, logoh)&#13;&#10;&#13;&#10;&#9;&#9;-- restore changed defaults&#13;&#10;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if createFullVersion then&#13;&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.full&quot;, compressionQuality)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if createWorldVersion then&#13;&#10;&#9;&#9;&#9;-- render a glow effect to place under equip&#13;&#10;&#9;&#9;&#9;if not glowRendered then&#13;&#10;&#9;&#9;&#9;&#9;renderglow()&#13;&#10;&#9;&#9;&#9;&#9;glowRendered = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- switch to screenshot texture&#13;&#10;&#9;&#9;&#9;selecthud(shotTexture)&#13;&#10;&#9;&#9;&#9;setfixedsize(worldw, worldh)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- copy world area of client&#13;&#10;&#9;&#9;&#9;drawtexture(clientTexture, 0, 0, 100, worldx, worldy, worldw, worldh)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- copy equipment&#13;&#10;&#9;&#9;&#9;if showEquipment then&#13;&#10;&#9;&#9;&#9;&#9;copyequip()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- save texture to file&#13;&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.world&quot;, compressionQuality)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- free texture&#13;&#10;&#9;&#9;&#9;freetexture(shotTexture)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- release texture contents to free memory (without deleting it)&#13;&#10;&#9;&#9;-- we won't be using it until next screenshot&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;freetexture(clientTexture)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function smartscreenshot(name)&#13;&#10;&#9;takeScreenshot = true&#13;&#10;&#9;fileName = name or 'smartss'&#13;&#10;end&#13;&#10;&#13;&#10;auto(50)&#13;&#10;&#13;&#10;init end&#13;&#10;&#13;&#10;-- runtime part&#13;&#10;&#13;&#10;if takeScreenshot then&#13;&#10;&#9;if not TakingScreenshot then&#13;&#10;&#9;&#9;-- huds can check for TakingScreenshot type&#13;&#10;&#9;&#9;-- to avoid drawing identifiable information&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;TakingScreenshot = hideHudInfo and (&quot;hide_personal_info method:&quot; .. hideMethod) or &quot;normal&quot;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;debugscript(&quot;Taking screenshot&quot;)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- huds can be hidden and outdated if client not focused&#13;&#10;&#9;&#9;-- and give chance for hud to hide personal info&#13;&#10;&#9;&#9;forcerefreshhuds()&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;debugscript(&quot;Huds refreshed&quot;)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- take the screenshot&#13;&#10;&#9;&#9;takeshot()&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;debugscript(&quot;Done&quot;)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;TakingScreenshot = nil&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;takeScreenshot = false&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#13;&#10;&#13;&#10;&#9;local showProfile = true&#13;&#10;&#9;local showRelation = true&#13;&#10;&#9;local showWaypoints = true&#13;&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#13;&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#13;&#10;&#9;local showSpecialAreas = true&#13;&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#13;&#10;&#13;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#13;&#10;&#13;&#10;&#9;local defFontColor        = color(223, 223, 223)&#13;&#10;&#9;local defBackColor        = color(70, 70, 70)&#13;&#10;&#9;local defHighColor        = color(128, 128, 128)&#13;&#10;&#9;local boxColor            = color(70, 70, 70)&#13;&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#13;&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#13;&#10;&#13;&#10;&#9;local borderSize = 4&#13;&#10;&#9;local paddingSize = 3&#13;&#10;&#13;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#13;&#10;&#13;&#10;&#9;ALIGN_LEFT   = 0&#13;&#10;&#9;ALIGN_CENTER = 1&#13;&#10;&#9;ALIGN_RIGHT  = 2&#13;&#10;&#13;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#13;&#10;&#13;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#13;&#10;&#13;&#10;&#9;do -- Register default handlers&#13;&#10;&#9;&#9;if showProfile then&#13;&#10;&#9;&#9;&#9;local function showProfileName(m)&#13;&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#13;&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showRelation then&#13;&#10;&#9;&#9;&#9;local function currentRelationName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- enemy&#13;&#10;&#9;&#9;&#9;local function setEnemyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- ally&#13;&#10;&#9;&#9;&#9;local function setAllyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- leader&#13;&#10;&#9;&#9;&#9;local function setLeaderName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showWaypoints then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#13;&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#13;&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showSpecialAreas then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end)(v))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function loadCategories(...)&#13;&#10;&#9;&#9;local categories = {...}&#13;&#10;&#13;&#10;&#9;&#9;for _, v in ipairs(categories) do&#13;&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#13;&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#13;&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;local width&#13;&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#13;&#10;&#9;&#9;&#9;&#9;&#9;});&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;filterinput(false, true, true, false)&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;local eventItem, itemIndex&#13;&#10;&#9;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;&#9;if v.id == e.elementid then&#13;&#10;&#9;&#9;&#9;&#9;eventItem = v&#13;&#10;&#9;&#9;&#9;&#9;itemIndex = i&#13;&#10;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;highlight = itemIndex&#13;&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#13;&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#13;&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;clicked = true&#13;&#10;&#9;&#9;&#9;highlight = nil&#13;&#10;&#9;&#9;&#9;waitforevents(false)&#13;&#10;&#9;&#9;&#9;press('[ESC]')&#13;&#10;&#9;&#9;&#9;waitforevents(true)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#13;&#10;&#9;setantialiasing(true)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(10)&#13;&#10;&#13;&#10;contextMenu = contextmenuinfo()&#13;&#10;&#13;&#10;-- This prevents the HUD from redrawing after clicking&#13;&#10;if clicked then&#13;&#10;&#9;clicked = contextMenu ~= nil&#13;&#10;&#9;contextMenu = nil&#13;&#10;end&#13;&#10;&#13;&#10;if contextMenu == nil then&#13;&#10;&#9;highlight = nil&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;items = {}&#13;&#10;maxWidth, maxHeight = 0, -4&#13;&#10;local fullWidth, fullHeight&#13;&#10;do -- Bootstrap&#13;&#10;&#13;&#10;&#9;-- Load categories&#13;&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#13;&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#13;&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#13;&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if contextMenu.type == 'world' then&#13;&#10;&#9;&#9;if not contextMenu.creature then&#13;&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.posz == $posz then&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;local i = 0&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;elseif contextMenu.type == 'container' then&#13;&#10;&#9;&#9;loadCategories('containerItem', 'item')&#13;&#10;&#9;elseif contextMenu.type == 'equip' then&#13;&#10;&#9;&#9;loadCategories('equipItem', 'item')&#13;&#10;&#9;end&#13;&#10;&#9;loadCategories(contextMenu.type)&#13;&#10;&#13;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#13;&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#13;&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#13;&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#13;&#10;&#9;-- but is the common implementation&#13;&#10;&#9;local lastSep = true&#13;&#10;&#13;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#13;&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#13;&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#13;&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#13;&#10;&#9;&#9;&#9;items[i] = nil&#13;&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;lastSep = curSep&#13;&#10;&#9;end&#13;&#10;&#9;table.normalize(items)&#13;&#10;&#13;&#10;&#9;-- No item to display, abort mission!&#13;&#10;&#9;if #items == 0 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#13;&#10;&#9;-- item; here we account for that&#13;&#10;&#9;maxWidth = maxWidth + 44&#13;&#10;&#13;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#13;&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw Container&#13;&#10;&#9;-- Draw main box&#13;&#10;&#9;setfillstyle('color', boxColor)&#13;&#10;&#9;setbordercolor(-1)&#13;&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#13;&#10;&#13;&#10;&#9;-- Draw shadows&#13;&#10;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;drawline(0, 0, fullWidth, 0)&#13;&#10;&#9;drawline(0, 0, 0, fullHeight)&#13;&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#13;&#10;&#13;&#10;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#13;&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#13;&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw items&#13;&#10;&#9;local curHeight = borderSize&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;-- Separators get special treatment here&#13;&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#13;&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#13;&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Set style&#13;&#10;&#9;&#9;&#9;setbordercolor(-1)&#13;&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#13;&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Draw stuff&#13;&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#13;&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="GeneralInfo1" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#10;&#9;&#10;&#9;local fontsize = 10&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#10;&#9;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#10;&#9;local maxsize = 220&#10;&#9;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;auto(100)&#10;local info = {&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#10;}&#10;&#10;if (displayontitle) then&#10;&#9;local x = 0&#10;&#9;for _,j in ipairs(info) do&#10;&#9;&#9;local str = j.text .. j.value&#10;&#9;&#9;local w = measurestring(str)&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(str, x, 0)&#10;&#9;&#9;x = x + w + 50&#10;&#9;end&#10;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#10;else&#10;&#9;for i,j in ipairs(info) do&#10;&#9;&#9;local w = measurestring(j.value)&#10;&#9;&#9;local posy = (i-1)*fontspacing&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(j.text, 2, posy)&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#10;&#9;end&#10;&#9;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#10;end" enabled="no" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="9"/>
            <MouseOption clickWaitMin="40" clickWaitMax="60"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="40" typeWaitMax="60"/>
            <KeyboardOption pressWaitMin="40" pressWaitMax="60"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="yes" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="yes" pauseBot="yes" logout="Close Client"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="9598"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="2"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="yes" refillAmmoMin="30" refillAmmoMax="75"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="140, 404, 831, 832, 833, 834, 883, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10181, 10182, 10207, 10209, 10216, 10286, 10287, 10288, 11009, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972, 17975"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="{&#10;&#9;&quot;type&quot;: &quot;scriptinfo&quot;,&#10;&#9;&quot;name&quot;: &quot;[Paladins] Oramond Dungeon: Catacombs&quot;,&#10;&#9;&quot;author&quot; : &quot;Eli Scripts&quot;,&#10;&#9;&quot;version&quot;: &quot;1.0&quot;&#10;},&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;[Paladins] Oramond Dungeon: Catacombs by Eli Scripts&quot;,&#10; &#9;&quot;children&quot; : &#10;    [&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;pvp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;as title says&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Retro PvP Safety&quot;,&#10;       &#9;&#9;&quot;value&quot; : false&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;walk&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Walk Through Players&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;PlayerAlert&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Player on Screen Alert&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;strong&gt;Warning&lt;/strong&gt; You have to set it correct else you'll get stuck, Shortcut is for poeple who got already 300 votes in Oramond Quest or more..&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;SoftsShortcut&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Shortcut to Rathleton&quot;,&#10;       &#9;&#9;&quot;value&quot; : false&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;strong&gt;Warning&lt;/strong&gt; Do not forget to configure Shortcut Settings or you might get stuck.. PS: The way is &lt;strong&gt;HARDCORE!&lt;/strong&gt;&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;SoftBootsRefiller&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Soft Boots Refiller&quot;,&#10;       &#9;&#9;&quot;value&quot; : false&#10;      &#9;},&#10;&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;lineedit&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;NormalBoots&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Normal Boots&quot;,&#10;       &#9;&#9;&quot;value&quot; : &quot;Boots of Haste&quot;&#10;      &#9;}&#10;     ]&#10;},&#10;&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Hunt Settings&quot;,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;East&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Hunt East Area&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;Deep&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Hunt Deep Area&quot;,&#10;       &#9;&#9;&quot;value&quot; : false&#10;      &#9;}&#10;&#9;]&#10;},&#10;&#10;&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Spells Attack Options&quot;,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;UseMasSan&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Use Exevo Mas San&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;ToMasSan&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;&#9;Ammount to Exevo mas San: &quot;,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; monsters&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : 2,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000&#10;      &#9;}&#10;&#9;]&#10;},&#10;&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Anty-Lure Options&quot;,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;UseAntyLure&quot;,&#10;&#9;&#9;&#9;&quot;text&quot; : &quot;Use Anty Lure&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;AmmountToAntyLure&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;&#9;Ammount to Anty Lure: &quot;,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; monsters&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : 4,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000&#10;      &#9;}&#10;&#9;]&#10;},&#10;&#10;&#10;{&#10;&#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Extra Script Settings&quot;,&#10; &#9;&quot;children&quot; : &#10;    [&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;SellJewels&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Sell Jewels after Hunt..&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Sell Jewels after Hunt&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;OfflineTrain&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Bot will go offline training on Low Stamina..&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Offline Training&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;LootGold&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Loot Gold Coins and use Gold Backpack&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;StopGold&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Cap to Stop Loot Gold &quot;,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; capity..&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : 150,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000&#10;      &#9;}&#10;&#9;]&#10;},&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Open Body Value&quot;,&#10;    &quot;column&quot; : 1,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;ValuableBodies&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Loot only Valuable Bodies&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;OpenBodyValue&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;&#9;Open Body Value: &quot;,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; GPs&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : 1,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000&#10;      &#9;}&#10;&#9;]&#10;},&#10;&#10;&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Backpack Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10; &#9;&quot;children&quot; : &#10;&#9;&#9;[&#10;       &#9;&#9;{&#10;  &#9;&#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;name&quot; : &quot;MainBP&quot;,&#10;&#9;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Main Backpack&lt;/strong&gt;&lt;br&gt;Name of your main backpack.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;text&quot; : &quot;Main Backpack Name&quot;,&#10;&#9;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;&#9;},&#10;&#9;&#9;&#9;{&#10;  &#9;&#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;name&quot; : &quot;LootBP&quot;,&#10;&#9;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Loot Backpack&lt;/strong&gt;&lt;br&gt;Name of yours loot backpacks.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;text&quot; : &quot;Loot Backpack Name&quot;,&#10;&#9;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;{&#10;  &#9;&#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;name&quot; : &quot;GoldBP&quot;,&#10;&#9;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Supplies Backpack&lt;/strong&gt;&lt;br&gt;Name of your supplies backpack.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;text&quot; : &quot;Gold Backpack Name&quot;,&#10;&#9;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;&#9;},&#10;&#9;&#9;&#9;{&#10;  &#9;&#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;name&quot; : &quot;SuppBP&quot;,&#10;&#9;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Supplies Backpack&lt;/strong&gt;&lt;br&gt;Name of your supplies backpack.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&#9;&quot;text&quot; : &quot;Supplies Backpack Name&quot;,&#10;&#9;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Zaoan Chess Box [[item: zaoan chess box]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;&#9;}&#10;     &#9;]&#10;},&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Depot Backpack Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;       &#9;{&#10;  &#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&quot;name&quot; : &quot;MainDpBp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Main Depot Backpack&lt;/strong&gt;&lt;br&gt;Name of your main backpack in depot.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&quot;text&quot; : &quot;Main Depot Backpack Name&quot;,&#10;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&quot;name&quot; : &quot;StackBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Stackables Backpack&lt;/strong&gt;&lt;br&gt;Name of yours stackable items backpacks, which are inside main depot backpack.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&quot;text&quot; : &quot;Stackables Backpack Name&quot;,&#10;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&quot;name&quot; : &quot;RareBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Non Stackables Backpack&lt;/strong&gt;&lt;br&gt;Name of yours non stackable items backpacks, which are inside main depot backpack.&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&quot;text&quot; : &quot;Not Stackable Backpack Name&quot;,&#10;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot; : &quot;separator&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;Food&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Withdraw Brown Mushrooms&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;Rusty&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Withdraw Flask of Rust Removers&quot;,&#10;       &#9;&#9;&quot;value&quot; : true&#10;      &#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&#9;&quot;name&quot; : &quot;RingBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;&lt;p&gt;&lt;strong&gt;Extra Item Backpack&lt;/strong&gt;&lt;br&gt;Backpack with mana potions and runes in your depot (next to main depot backpack)&lt;/p&gt;&quot;,&#10;  &#9;&#9;&#9;&quot;text&quot; : &quot;Extra Item Backpack&quot;,&#10;&#9;&#9;&#9;&quot;items&quot; : [&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Green Backpack [[item: green backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Anniversary Backpack [[item: Anniversary backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brown Backpack [[item: brown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Backpack of Holding [[item: backpack of holding]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Beach Backpack [[item: beach backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Blue Backpack [[item: blue backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Brocade Backpack [[item: brocade backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Buggy Backpack [[item: buggy backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Camouflage Backpack [[item: camouflage backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crown Backpack [[item: crown backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Crystal Backpack [[item: crystal backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Deepling Backpack [[item: deepling backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Demon Backpack [[item: demon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Dragon Backpack [[item: dragon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expedition Backpack [[item: expedition backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Fur Backpack [[item: fur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Golden Backpack [[item: golden backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orange Backpack [[item: Orange backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Grey Backpack [[item: grey backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Heart Backpack [[item: heart backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Jewelled Backpack [[item: jewelled backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Minotaur Backpack [[item: minotaur backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Moon Backpack [[item: moon backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mushroom Backpack [[item: mushroom backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pannier Backpack [[item: pannier backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Pirate Backpack [[item: pirate backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Purple Backpack [[item: purple backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Red Backpack [[item: red backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Santa Backpack [[item: santa backpack]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Shopping Bag [[item: shopping bag]]&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Yellow Backpack [[item: yellow backpack]]&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;]&#10;  &#9;&#9;}&#10;&#9;]&#10;},&#10;&#10;&#10;&#10;{&#10; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&quot;name&quot;  : &quot;Supplies Settings&quot;,&#10; &#9;&quot;column&quot; : 2,&#10; &#9;&quot;children&quot; : &#10;&#9;[&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;AmmoName&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Ammo Name:&quot;,&#10;       &#9;&#9;&quot;items&quot; : [&quot;Prismatic Bolt[[item: prismatic bolt]]&quot;, &quot;Crystalline Arrow[[item: crystalline arrow]]&quot;]&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;AmmoToBuy&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Ammo to Buy:&quot;,&#10;&#9;&#9;&#9;&quot;max&quot; : 10000,&#10;&#9;&#9;&#9;&quot;value&quot; : 1800,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; units..&quot;&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;AmmoToLeave&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Ammo to Leave:&quot;,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000,&#10;&#9;&#9;&#9;&quot;min&quot; : 200,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; units..&quot;&#10;      &#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot; : &quot;separator&quot;&#10;&#9;&#9;},&#10;&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;MpToBuy&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Amount of mana potions to buy.&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Mana potions to buy: &quot;,&#10;&#9;&#9;&#9;&quot;max&quot; : 10000,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; potions..&quot;,&#10;       &#9;&#9;&quot;value&quot; : 700&#10;      &#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;MpToLeave&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Amount of strong mana potions to leave spawn..&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Mana potions to leave: &quot;,&#10;&#9;&#9;&#9;&quot;max&quot; : 1000,&#10;&#9;&#9;&#9;&quot;min&quot; : 60,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; potions..&quot;&#10;      &#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot; : &quot;separator&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;       &#9;&#9;&quot;type&quot; : &quot;spinbox&quot;,&#10;       &#9;&#9;&quot;name&quot; : &quot;StaminaCheck&quot;,&#10;       &#9;&#9;&quot;text&quot; : &quot;Stamina check&quot;,&#10;&#9;&#9;&#9;&quot;max&quot; : 42,&#10;&#9;&#9;&#9;&quot;suffix&quot; : &quot; hours..&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : 15&#10;      &#9;}&#10;&#9;]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="33451" y="31726" z="8" type="Square (Filled)" width="12" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="yes" ignoreWhenLooting="yes" comment=""/>
            <Area name="SArea1" x="33462" y="31717" z="8" type="Square (Filled)" width="1" height="10" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="yes" ignoreWhenLooting="yes" comment=""/>
            <Area name="SArea2" x="33461" y="31725" z="8" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea3" x="33461" y="31717" z="8" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea4" x="33451" y="31717" z="8" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea5" x="33451" y="31725" z="8" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea6" x="33453" y="31723" z="8" type="Square (Filled)" width="3" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea7" x="33459" y="31717" z="8" type="Square (Filled)" width="2" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts>
            <CavebotScript name="Flask Dropper" script="auto(200)&#10;local FLASKS = {283,284,285}&#10;&#10;for i = 1, #FLASKS do&#10;&#9;while (itemcount(FLASKS[i]) &gt;= 10) and (maround(4,false) == 0) and $cap &lt;= 300 do&#10;&#9;&#9;pausewalking(10000)&#10;    &#9;moveitems(FLASKS[i], 'ground', 'all', 100)&#10;&#9;&#9;pausewalking(0)&#10;    end&#10;end" enabled="yes"/>
            <CavebotScript name="Safe Bank" script="auto(700)&#10;foreach newmessage m do&#10;&#9;if m.content == &quot;There is not enough gold on your account.&quot; and m.type == 6 then&#10;&#9;&#9;gotolabel(0, &quot;Train&quot;)&#10;&#9;end&#10;end&#10;&#10;" enabled="yes"/>
            <CavebotScript name="WalkViaPlayers" script="auto(100)&#10;if not getuseroption(&quot;walk&quot;) then&#10;&#9;if $pzone then&#10;&#9;&#9;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;&#9;else&#10;&#9;&#9;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;&#9;end&#10;else&#10;&#9;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;" enabled="yes"/>
            <CavebotScript name="Player Alert" script="auto(500)&#10;if getuseroption(&quot;PlayerAlert&quot;) and $wptsection == &quot;Hunt&quot; and paround(10) &gt; 0 then&#10;&#9;playsound('playeronscreen.wav')&#10;&#9;beep()&#10;&#9;wait(1000,2000)&#10;end&#10;&#10;&#10;" enabled="yes"/>
            <CavebotScript name="Soft Boots" script="auto(1500)&#10;&#10;local DEFAULT_BOOTS = getuseroption(&quot;NormalBoots&quot;) --Name of normal boots&#10;local CONSIDER_TYPE = 1 --[[ 1 = mp pc, 2 = hp pc, 3 = mp exact, 4 = hp exact ]]&#10;local CONSIDER_EQUIP = {20, 90} -- Value to equip soft boots&#10;local CONSIDER_UNEQUIP = {98, 99} -- Value to unequip soft boots&#10;&#10;--[[ ENGINE ]]&#10;local SCRIPT_INFO = &quot;Name: Soft Boots Changer/nVersion: 1.2.0 beta/nAuthor: sirmate&quot;&#10;local NORMAL_BOOTS_ID = itemid(DEFAULT_BOOTS)&#10;local RANDOM_EQUIP = math.random(CONSIDER_EQUIP[1], CONSIDER_EQUIP[2])&#10;local RANDOM_UNEQUIP = math.random(CONSIDER_UNEQUIP[1], CONSIDER_UNEQUIP[2])&#10;local HP_MP_VALUES = {$mppc, $hppc, $mp, $hp}&#10;&#10;if ($feet.id == 3549) and ($pzone == true or HP_MP_VALUES[CONSIDER_TYPE] &gt;= RANDOM_UNEQUIP) then&#10;&#9;if (itemcount(DEFAULT_BOOTS, 'all') &gt; 0) then&#10;&#9;&#9;moveitems(NORMAL_BOOTS_ID, &quot;Boots&quot;, &quot;all&quot;, 1)&#10;&#9;&#9;wait(1100, 1200)&#10;        else&#10;&#9;&#9;moveitems($feet.id, &quot;all&quot;, &quot;Boots&quot;, 1)&#10;&#9;&#9;wait(1000, 1200)&#10;&#9;end&#10;elseif ($feet.id == 6530 or $feet.id == 0) then&#10;&#9;if (HP_MP_VALUES[CONSIDER_TYPE] &lt;= RANDOM_EQUIP) and ($pzone == false) and (itemcount(6529, 'all') &gt; 0) then&#10;&#9;&#9;moveitems(6529, &quot;Boots&quot;, &quot;all&quot;, 1)&#10;&#9;&#9;wait(1000, 1200)&#10;&#9;elseif (itemcount(NORMAL_BOOTS_ID, 'all') &gt; 0) then&#10;&#9;&#9;moveitems(NORMAL_BOOTS_ID, &quot;Boots&quot;, &quot;all&quot;, 1)&#10;&#9;&#9;wait(1000, 1200)&#10;&#9;elseif ($feet.id &gt; 0) then&#10;&#9;&#9;moveitems($feet.id, &quot;all&quot;, &quot;Boots&quot;, 1)&#10;&#9;&#9;wait(1000, 1200)&#10;       &#9;end&#10;elseif ($feet.id == NORMAL_BOOTS_ID) and (HP_MP_VALUES[CONSIDER_TYPE] &lt;= RANDOM_EQUIP) and ($pzone == false) and (itemcount(6529, 'all') &gt; 0) then&#10;&#9;moveitems(6529, &quot;Boots&quot;, &quot;all&quot;, 1)&#10;&#9;wait(1000, 1200)&#10;end" enabled="yes"/>
            <CavebotScript name="OpenBodyValue" script="auto(1000)&#10;&#10;&#10;if getuseroption(&quot;ValuableBodies&quot;) then&#10;setsetting('Looting/OnlyOpenValuableBodies', 'yes')&#10;else&#10;setsetting('Looting/OnlyOpenValuableBodies', 'no')&#10;end&#10;&#10;setsetting('Looting/ValuableBodiesValue', getuseroption(&quot;OpenBodyValue&quot;))&#10;" enabled="yes"/>
            <CavebotScript name="Refiller" script="auto(500)&#10;&#10;if ($wptsection == &quot;Hunt&quot; and $attacked.id == 0 and not $trapped and $lootsaround == 0) then&#10;   if lowsupplies() then&#10;      setsetting('Targeting/Creatures/Category A_1/Setting1/OnlyIfTrapped', 'yes') &#10;      setsetting('Targeting/Creatures/Category A_2+/Setting1/OnlyIfTrapped', 'yes')&#10;      stopattack() &#10;      OnlyTargOn()&#10;      OnlyLootingOff()&#10;      if not $hasted then&#10;            cast('utani hur')&#10;      end&#10;     gotolabel(0, &quot;Leave&quot;)&#10;  end&#10;end" enabled="yes"/>
            <CavebotScript name="Utura Gran" script="auto(3000)&#10;&#10;&#10;if (not $pzone) and (cancastspell(&quot;utura gran&quot;)) and (maround(3) &lt;= 3) and ($wptsection == &quot;Hunt&quot;) and ($hppc &lt; 95) and (not $strenghtened) then&#10;&#9;cast(&quot;utura gran&quot;)&#10;&#9;wait(2500)&#10;end" enabled="yes"/>
            <CavebotScript name="Rust Fucked" script="init start&#10;    local Items = {&quot;plate armor&quot;, &quot;plate legs&quot;, &quot;brass legs&quot;, &quot;scale armor&quot;} &#10;init end&#10;&#10;auto(1000)&#10;&#10;if maround(1) == 0 then&#10;  for _, i in ipairs(Items) do&#10;    dropitems(i)&#10;    wait(200, 300)&#10;  end&#10;end" enabled="yes"/>
        </CavebotScripts>
        <WaypointSection name="Location">
            <Waypoint type="Action" x="33625" y="31895" z="7" rangeX="1" rangeY="1" script="if $posz ~= 7 then&#10;   printerror(&quot;You have started script in wrong place, please go to Oramond Depot and enable cavebot&quot;)&#10;   setcavebot(&quot;off&quot;)&#10;else&#10;   gotolabel(&quot;AtDepot&quot;, &quot;AtDepot&quot;)&#10;   setsetting('Alerts/DisableSounds', 'no')&#10;end"/>
        </WaypointSection>
        <WaypointSection name="AtDepot">
            <Waypoint type="Stand" x="33621" y="31893" z="7" rangeX="1" rangeY="1" label="AtDepot"/>
            <Waypoint type="Action" x="33621" y="31893" z="7" rangeX="1" rangeY="1" label="OpensBps" script="--Backpacks to depositing..&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;wait(200,300)&#10;&#10;reachgrounditem(&quot;depot&quot;)&#10;wait(1000,1200)&#10;&#10;closewindows()&#10;wait(1000)&#10;&#10;while (windowcount(LootBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;&#9;openitem(LootBP[&quot;name&quot;], MainBP[&quot;name&quot;], false)&#10;&#9;waitping()&#10;end&#10;&#10;while itemcount(LootBP[&quot;name&quot;], LootBP[&quot;name&quot;]) &gt; 0 do&#10;&#9;openitem(LootBP[&quot;name&quot;], LootBP[&quot;name&quot;], false)&#10;&#9;waitping()&#10;end"/>
            <Waypoint type="Action" x="33621" y="31893" z="7" rangeX="1" rangeY="1" label="Depositer" script="-- Crazy Depositer works?&#10;&#10;depotaction('maindpBp', 'lootbp', {'az','stackbp','b','rarebp'})&#10;closewindows()&#10;waitping()&#10;"/>
            <Waypoint type="Action" x="33625" y="31894" z="7" rangeX="1" rangeY="1" label="DepositJewelled" script="local mainbp = getlootingdestination('mainbp')&#10;local lootbp = getlootingdestination('lootbp')&#10;&#10;&#10;closewindows()&#10;wait(2000)&#10;&#10;while windowcount() &lt; 2 do&#10;    openitem(mainbp, &quot;back&quot;)&#10;    wait(1000)&#10;    openitem(lootbp, mainbp, true)&#10;    wait(1000)&#10;    resizewindows(mainbp, 100)&#10;    wait(1000)&#10;end&#10;&#10;local xa = itemcount(&quot;jewelled backpack&quot;, MainBP)&#10;local space = getcontainer(lootbp).maxslots - getcontainer(lootbp).usedslots&#10;&#10;if itemcount(&quot;jewelled backpack&quot;, mainbp) &gt; 0 then&#10;    if space &gt;= xa then&#10;        for i=0, xa do&#10;            moveitems(&quot;jewelled backpack&quot;, lootbp, mainbp, 1)&#10;            wait(500,1000)&#10;        end&#10;    end&#10;    gotolabel($wpt.id-2, $wptsection)&#10;else&#10;    return&#10;end"/>
            <Waypoint type="Action" x="33625" y="31894" z="7" rangeX="1" rangeY="1" label="CheckWithdraw" script="if getuseroption(&quot;Rusty&quot;) or getuseroption(&quot;Food&quot;) then&#10;   return&#10;else&#10;   gotolabel(&quot;LeaveDepot&quot;, &quot;AtDepot&quot;)&#10;end"/>
            <Waypoint type="Action" x="33625" y="31894" z="7" rangeX="1" rangeY="1" label="WithdrawItems" script="local mainbp = getlootingdestination('mainbp')&#10;local suppbp = getlootingdestination('suppbp')&#10;local suppbp2 = getlootingdestination('suppbp2')&#10;local extraitembp = getlootingdestination('ringbp')&#10;&#10;&#10;local Withdraw = {&#10;{Name = &quot;Brown Mushroom&quot;, Amount = 100, Check = getuseroption(&quot;Food&quot;), Destination = mainbp},&#10;{Name = &quot;Flask of Rust Remover&quot;, Amount = 30, Check = getuseroption(&quot;Rusty&quot;), Destination = suppbp},&#10;}&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;closewindows()&#10;wait(1000,1200)&#10;&#10;while (windowcount(MainBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;end&#10;&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;      opendepot()&#10;      wait(300,500)&#10;end&#10;&#10;while windowcount(extraitembp) == 0 do&#10;      openitem(extraitembp, &quot;Depot Chest&quot;, false)&#10;      wait(800,1000)&#10;end&#10;&#10;resizewindows(100, extraitembp)&#10;wait(700,1000)&#10;&#10;while true do&#10;local More = false&#10;for _, DP in ipairs(Withdraw) do&#10;if DP.Check then&#10;while windowcount(DP.Destination) == 0 do&#10;openitem(DP.Destination, mainbp, true)&#10;wait(1000)&#10;resizewindows(0, DP.Destination)&#10;wait(500,1000)&#10;end&#10;Amount = DP.Amount - itemcount(DP.Name, DP.Destination)&#10;DepoAmount = itemcount(DP.Name, extraitembp)&#10;while itemcount(DP.Name, extraitembp) &gt; 0 and Amount &gt; 0 do&#10;moveitems(DP.Name, DP.Destination, extraitembp, Amount)&#10;wait(300, 400)&#10;Amount = DP.Amount - itemcount(DP.Name, DP.Destination)&#10;end&#10;if Amount &gt; 0 then&#10;More = true&#10;end&#10;end&#10;end&#10;if More then&#10;if itemcount(extraitembp, extraitembp) &gt; 0 then&#10;openitem(extraitembp, extraitembp, false)&#10;wait(1000)&#10;else&#10;break&#10;end&#10;else&#10;break&#10;end&#10;end&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;waitping()"/>
            <Waypoint type="Stand" x="33624" y="31895" z="7" rangeX="1" rangeY="1" label="LeaveDepot"/>
            <Waypoint type="Stand" x="33623" y="31895" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31892" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31891" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31892" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31892" z="5" rangeX="1" rangeY="1" label="CheckLeaveDepot" script="if not islocation(2) then&#10;   gotolabel(&quot;LeaveDepot&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33626" y="31892" z="5" rangeX="1" rangeY="1" label="GetCash" script="while (windowcount(SuppBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;    waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;end&#10;&#10;&#10;&#9;local CASH = {&#10;        AMMO = positive(getuseroption(&quot;MpToBuy&quot;) - itemcount(&quot;strong mana potion&quot;)) * 80,&#10;    &#9;MANA = positive(getuseroption(&quot;AmmoToBuy&quot;) - itemcount(getuseroption(&quot;AmmoName&quot;))) * 20,&#10;    &#9;SOFTS = getuseroption(&quot;SoftBootsRefiller&quot;) and itemcount(&quot;worn soft boots&quot;)*10000 or 0,&#10;&#9;&#9;TRAVEL = 5000&#10;&#9;}&#10;&#10;    local TOTAL = CASH.AMMO + CASH.MANA + CASH.SOFTS + CASH.TRAVEL &#10;&#10;    if (gold() ~= TOTAL) then&#10;                reachcreature(&quot;Virgil&quot;)&#10;                wait(1000,1200)&#10;&#9;&#9;npctalk(&quot;hi&quot;, &quot;deposit all&quot;, &quot;yes&quot;, &quot;withdraw &quot; .. TOTAL, &quot;yes&quot;, &quot;balance&quot;)&#10;    end&#10;   &#10;&#9;wait(1000)&#10;&#10;    if (gold() ~= TOTAL) then&#10;        gotolabel(&quot;Bank&quot;)&#10;    end&#10;"/>
            <Waypoint type="Stand" x="33626" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33620" y="31897" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33620" y="31897" z="6" rangeX="1" rangeY="1" label="CheckStamina" script="if $stamina &lt; getuseroption(&quot;StaminaCheck&quot;)*60 then&#10;   gotolabel(0, &quot;Train&quot;)&#10;else&#10;   return&#10;end&#10;"/>
            <Waypoint type="Node" x="33619" y="31892" z="6" rangeX="1" rangeY="1" label="ToSupply"/>
            <Waypoint type="Node" x="33619" y="31890" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33619" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31885" z="6" rangeX="1" rangeY="1" label="Door1" script="usedoor($wptx,$wpty,$wptz,&quot;open&quot;)"/>
            <Waypoint type="Node" x="33620" y="31881" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33620" y="31880" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33617" y="31879" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33618" y="31882" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33618" y="31882" z="4" rangeX="1" rangeY="1" label="GetManas" script="if not islocation(2) then&#10;   gotolabel(&quot;ToSupply&quot;, $wptsection)&#10;else&#10;&#9;local SUPPLIES = {&#10;&#9;&#9;{NAME = &quot;strong mana potion&quot;, AMOUNT = getuseroption(&quot;MpToBuy&quot;)},&#10;&#9;}&#10;&#10;while (windowcount(SuppBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;end&#10;&#9;opentrade()&#10;&#9;waitping()&#10;    sellflasks()&#10;&#10;&#9;for _, SUP in ipairs(SUPPLIES) do&#10;&#9;&#9;local TOTAL = (SUP.AMOUNT - itemcount(SUP.NAME))/100&#10;&#10;&#9;&#9;for I=1, TOTAL do&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT) &#10;&#9;&#9;&#9;waitping()&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;&#9;TOTAL = TOTAL - 100&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (itemcount(SUP.NAME) &lt; SUP.AMOUNT) then&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT - itemcount(SUP.NAME)) &#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;while (itemcount(SUP.NAME, MainBP[&quot;name&quot;]) &gt; 0) and (getcontainer(SuppBP[&quot;name&quot;]).itemcount &lt; getcontainer(SuppBP[&quot;name&quot;]).maxcount) do&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;           settrap(&quot;yes&quot;, &quot;Minotaur Hunter&quot;, &quot;Worm Priestess&quot;, &quot;Mooh'Tah Warrior&quot;)&#10;           setsetting('Targeting/Creatures/Minotaur Hunter/Setting2/OnlyIfTrapped', 'yes')&#10;"/>
            <Waypoint type="Stand" x="33617" y="31880" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33617" y="31879" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33619" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31882" z="5" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;   gotolabel(&quot;ToSupply&quot;, $wptsection)&#10;else&#10;&#9;local SUPPLIES = {&#10;&#9;&#9;{NAME = 3197 , AMOUNT = 15},&#10;&#9;}&#10;&#10;while (windowcount(SuppBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;end&#10;&#9;opentrade()&#10;&#9;waitping()&#10;    sellflasks()&#10;&#10;&#9;for _, SUP in ipairs(SUPPLIES) do&#10;&#9;&#9;local TOTAL = (SUP.AMOUNT - itemcount(SUP.NAME))/100&#10;&#10;&#9;&#9;for I=1, TOTAL do&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT) &#10;&#9;&#9;&#9;waitping()&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;&#9;TOTAL = TOTAL - 100&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (itemcount(SUP.NAME) &lt; SUP.AMOUNT) then&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT - itemcount(SUP.NAME)) &#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;while (itemcount(SUP.NAME, MainBP[&quot;name&quot;]) &gt; 0) and (getcontainer(SuppBP[&quot;name&quot;]).itemcount &lt; getcontainer(SuppBP[&quot;name&quot;]).maxcount) do&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;"/>
            <Waypoint type="Stand" x="33620" y="31880" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33620" y="31884" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33620" y="31885" z="6" rangeX="1" rangeY="1" label="Door2" script="usedoor($wptx,$wpty,$wptz,&quot;open&quot;)"/>
            <Waypoint type="Stand" x="33620" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33627" y="31887" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33632" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31885" z="6" rangeX="1" rangeY="1" script="usedoor($wptx,$wpty,$wptz,&quot;open&quot;)"/>
            <Waypoint type="Stand" x="33631" y="31883" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33630" y="31883" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33632" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31882" z="5" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;   gotolabel(&quot;ToSupply&quot;, $wptsection)&#10;else&#10;&#9;local SUPPLIES = {&#10;&#9;&#9;{NAME = getuseroption(&quot;AmmoName&quot;), AMOUNT = getuseroption(&quot;AmmoToBuy&quot;)},&#10;&#9;}&#10;&#10;while (windowcount(SuppBP[&quot;name&quot;]) == 0) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;end&#10;&#9;opentrade()&#10;&#9;waitping()&#10;    sellflasks()&#10;&#10;&#9;for _, SUP in ipairs(SUPPLIES) do&#10;&#9;&#9;local TOTAL = (SUP.AMOUNT - itemcount(SUP.NAME))/100&#10;&#10;&#9;&#9;for I=1, TOTAL do&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT) &#10;&#9;&#9;&#9;waitping()&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;&#9;TOTAL = TOTAL - 100&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (itemcount(SUP.NAME) &lt; SUP.AMOUNT) then&#10;&#9;&#9;&#9;buyitems(SUP.NAME, SUP.AMOUNT - itemcount(SUP.NAME)) &#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;while (itemcount(SUP.NAME, MainBP[&quot;name&quot;]) &gt; 0) and (getcontainer(SuppBP[&quot;name&quot;]).itemcount &lt; getcontainer(SuppBP[&quot;name&quot;]).maxcount) do&#10;        &#9;moveitems(SUP.NAME, SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], 100)&#10;&#9;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;"/>
            <Waypoint type="Stand" x="33631" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33630" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33633" y="31884" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33633" y="31885" z="6" rangeX="1" rangeY="1" script="usedoor($wptx,$wpty,$wptz,&quot;open&quot;)"/>
            <Waypoint type="Stand" x="33633" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33633" y="31889" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33633" y="31889" z="6" rangeX="1" rangeY="1" label="CheckToSupply" script="if not islocation(2) then&#10;   gotolabel(&quot;ToSupply&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33633" y="31889" z="6" rangeX="1" rangeY="1" label="CheckSoftBoots" script="if (getuseroption(&quot;SoftBootsRefiller&quot;) and itemcount(&quot;worn soft boots&quot;) &gt; 0 and itemcount(&quot;soft boots&quot;) == 0) then&#10;    gotolabel(0, &quot;SoftBoots&quot;)&#10;else&#10;    gotolabel(0, &quot;ToSpawn&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="SoftBoots">
            <Waypoint type="Action" x="33631" y="31901" z="6" rangeX="1" rangeY="1" label="CheckShortcut" script="if getuseroption(&quot;SoftsShortcut&quot;) then&#10;   gotolabel(&quot;Short&quot;, $wptsection)&#10;else&#10;   gotolabel(&quot;ToSofts&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33634" y="31892" z="6" rangeX="1" rangeY="1" label="Short"/>
            <Waypoint type="Stand" x="33637" y="31891" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33490" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33490" y="31985" z="7" rangeX="1" rangeY="1" label="CheckShort" script="if not islocation(2) then&#10;   gotolabel(&quot;Short&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33492" y="31985" z="7" rangeX="1" rangeY="1" label="FindWay" script="gotolabel(&quot;CaptainGulliver&quot;, $wptsection)"/>
            <Waypoint type="Stand" x="33630" y="31904" z="6" rangeX="1" rangeY="1" label="ToSofts"/>
            <Waypoint type="Node" x="33631" y="31912" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33632" y="31918" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33637" y="31927" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33635" y="31936" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33635" y="31942" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33635" y="31943" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33635" y="31944" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33642" y="31949" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33652" y="31951" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33665" y="31955" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33670" y="31960" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33665" y="31966" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33665" y="31976" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33660" y="31982" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33654" y="31988" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33654" y="31988" z="7" rangeX="1" rangeY="1" label="CheckToSofts" script="if not islocation(2) then&#10;   gotolabel(&quot;ToSofts&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33654" y="31990" z="7" rangeX="1" rangeY="1" label="ViaRoots"/>
            <Waypoint type="Stand" x="33653" y="31990" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33628" y="32007" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33622" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33613" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33603" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33592" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33583" y="32010" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33573" y="32010" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33565" y="32010" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33557" y="32010" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33546" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33543" y="32013" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33543" y="32014" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33541" y="32014" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33538" y="32014" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33488" y="31983" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33482" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33482" y="31985" z="7" rangeX="1" rangeY="1" label="CheckViaRoots" script="if not islocation(2) then&#10;   gotolabel(&quot;ViaRoots&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33481" y="31985" z="7" rangeX="1" rangeY="1" label="CaptainGulliver"/>
            <Waypoint type="Action" x="33482" y="31985" z="7" rangeX="1" rangeY="1" label="TravelThais" script="reachcreature(&quot;Captain Gulliver&quot;)&#10;wait(1200,1500)&#10;say(&quot;hi&quot;)&#10;wait(1200,1560)&#10;npcsay(&quot;thais&quot;)&#10;wait(500,1000)&#10;npcsay(&quot;yes&quot;)&#10;wait(200,300)"/>
            <Waypoint type="Stand" x="32311" y="32210" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32311" y="32210" z="6" rangeX="1" rangeY="1" label="CheckCaptainGulliver" script="if not islocation(2) then&#10;   gotolabel(&quot;CaptainGulliver&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="32311" y="32210" z="6" rangeX="1" rangeY="1" label="TravelVenore"/>
            <Waypoint type="Action" x="32311" y="32210" z="6" rangeX="1" rangeY="1" label="CapitanBluebear" script="reachcreature(&quot;Captain Bluebear&quot;)&#10;wait(1200,1500)&#10;say(&quot;hi&quot;)&#10;wait(1200,1560)&#10;npcsay(&quot;venore&quot;)&#10;wait(500,1000)&#10;npcsay(&quot;yes&quot;)&#10;wait(200,300)"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" label="CheckTravelVenore" script="if not islocation(2) then&#10;   gotolabel(&quot;TravelVenore&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Node" x="32954" y="32028" z="6" rangeX="1" rangeY="1" label="ToAldo"/>
            <Waypoint type="Node" x="32954" y="32037" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32045" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32051" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32058" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32064" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32067" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32083" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32092" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32949" y="32097" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32949" y="32103" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32953" y="32108" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32953" y="32108" z="6" rangeX="1" rangeY="1" script="reachcreature(&quot;Aldo&quot;)&#10;wait(1200,1500)&#10;say(&quot;hi&quot;)&#10;wait(1200,1560)&#10;npcsay(&quot;soft boots&quot;)&#10;wait(500,1000)&#10;npcsay(&quot;yes&quot;)&#10;wait(200,300)"/>
            <Waypoint type="Node" x="32951" y="32106" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32949" y="32100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32088" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32955" y="32079" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32955" y="32074" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32065" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32061" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32055" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32047" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32039" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32955" y="32032" z="6" rangeX="1" rangeY="1" label="ToThajz"/>
            <Waypoint type="Stand" x="32955" y="32022" z="6" rangeX="1" rangeY="1" label="TravelThais"/>
            <Waypoint type="Action" x="32955" y="32022" z="6" rangeX="1" rangeY="1" script="reachcreature(&quot;Captain Bluebear&quot;)&#10;wait(1200,1500)&#10;say(&quot;hi&quot;)&#10;wait(1200,1560)&#10;npcsay(&quot;thais&quot;)&#10;wait(500,1000)&#10;npcsay(&quot;yes&quot;)&#10;wait(200,300)"/>
            <Waypoint type="Stand" x="32312" y="32211" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32312" y="32211" z="6" rangeX="1" rangeY="1" label="CheckTravelThais" script="if not islocation(2) then&#10;   gotolabel(&quot;TravelThais&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="32311" y="32211" z="6" rangeX="1" rangeY="1" label="TravelOramond"/>
            <Waypoint type="Action" x="32311" y="32211" z="6" rangeX="1" rangeY="1" script="reachcreature(&quot;Captain Bluebear&quot;)&#10;wait(1200,1500)&#10;say(&quot;hi&quot;)&#10;wait(1200,1560)&#10;npcsay(&quot;oramond&quot;)&#10;wait(500,1000)&#10;npcsay(&quot;yes&quot;)&#10;wait(200,300)"/>
            <Waypoint type="Stand" x="33479" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33479" y="31985" z="7" rangeX="1" rangeY="1" label="CheckTravelOramond" script="if not islocation(2) then&#10;   gotolabel(&quot;TravelOramond&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33486" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33486" y="31985" z="7" rangeX="1" rangeY="1" label="CheckShortcutBack" script="if getuseroption(&quot;SoftsShortcut&quot;) then&#10;   gotolabel(&quot;ShortBack&quot;, $wptsection)&#10;else&#10;   gotolabel(&quot;ToRoots&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33491" y="31985" z="7" rangeX="1" rangeY="1" label="ShortBack"/>
            <Waypoint type="Stand" x="33492" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33634" y="31891" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33634" y="31891" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;   gotolabel(&quot;ShortBack&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33633" y="31892" z="6" rangeX="1" rangeY="1" label="FindWay2" script="gotolabel(0, &quot;ToSpawn&quot;)"/>
            <Waypoint type="Stand" x="33485" y="31985" z="7" rangeX="1" rangeY="1" label="ToRoots"/>
            <Waypoint type="Node" x="33488" y="31986" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33490" y="31986" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33492" y="31985" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33542" y="32014" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33543" y="32014" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33553" y="32012" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33564" y="32010" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33571" y="32009" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33580" y="32008" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33591" y="32008" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33602" y="32008" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33610" y="32008" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33618" y="32011" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33627" y="32012" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33628" y="32009" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33628" y="32006" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33628" y="32005" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33654" y="31989" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33654" y="31989" z="7" rangeX="1" rangeY="1" label="CheckToRoots" script="if not islocation(2) then&#10;   gotolabel(&quot;ToRoots&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33655" y="31985" z="7" rangeX="1" rangeY="1" label="ToSpawn"/>
            <Waypoint type="Node" x="33656" y="31984" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33659" y="31981" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33664" y="31977" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33666" y="31971" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33671" y="31964" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33674" y="31958" z="7" rangeX="1" rangeY="1" label="RunToTown"/>
            <Waypoint type="Node" x="33666" y="31954" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33652" y="31953" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33638" y="31948" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31945" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31944" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33638" y="31935" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33638" y="31935" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;   gotolabel(&quot;RunToTown&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33638" y="31924" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33633" y="31915" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33620" y="31910" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33621" y="31905" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33621" y="31905" z="6" rangeX="1" rangeY="1" label="LoopFromSofts" script="if islocation(5) then&#10;   gotolabel(0, &quot;ToSpawn&quot;)&#10;else&#10;   gotolabel($wptid-3, $wptsection)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="ToSpawn">
            <Waypoint type="Stand" x="33635" y="31889" z="6" rangeX="1" rangeY="1" label="ToResp"/>
            <Waypoint type="Stand" x="33636" y="31889" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33637" y="31889" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33647" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33657" y="31892" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33663" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33663" y="31889" z="5" rangeX="1" rangeY="1" label="Dooors" script="usedoor($wptx,$wpty,$wptz,&quot;open&quot;)"/>
            <Waypoint type="Stand" x="33666" y="31887" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33669" y="31887" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33460" y="31722" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33460" y="31722" z="9" rangeX="1" rangeY="1" label="CheckToResp" script="if not islocation(2) then&#10;   gotolabel(&quot;ToResp&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33460" y="31722" z="9" rangeX="1" rangeY="1" label="Backpacks" script="setsetting('Looting/OpenNextBP', 'no')&#10;waitping(2,3)&#10;&#10;if getuseroption(&quot;LootGold&quot;) then&#10;&#10;while (windowcount() &lt; 4) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(LootBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(GoldBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;end&#10;&#10;elseif not getuseroption(&quot;LootGold&quot;) then&#10;&#10;while (windowcount() &lt; 3) do&#10;&#9;closewindows()&#10;&#9;waitping()&#10;&#9;openitem(MainBP[&quot;name&quot;], 'back')&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(LootBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;&#9;openitem(SuppBP[&quot;name&quot;], MainBP[&quot;name&quot;], true)&#10;&#9;waitping()&#10;    resizewindows()&#10;&#9;waitping()&#10;end&#10;&#10;end&#10;&#10;setsetting('Targeting/Creatures/Category A_1/Setting1/OnlyIfTrapped', 'no') &#10;setsetting('Targeting/Creatures/Category A_2+/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;TargOn()&#10;waitping(2,3)"/>
            <Waypoint type="Stand" x="33454" y="31724" z="9" rangeX="1" rangeY="1" label="FromLured"/>
            <Waypoint type="Action" x="33454" y="31724" z="9" rangeX="1" rangeY="1" label="CheckLured" script="if maroundfilter(7, true) &gt; getuseroption(&quot;AmmountToAntyLure&quot;) then&#10;   printerror(&quot;someone trying to kill you, near stairs are lured mobs, bot will wait..&quot;)&#10;   wait(5000)&#10;   gotolabel($wptid-1, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33454" y="31723" z="9" rangeX="1" rangeY="1" label="EnterSpawn"/>
            <Waypoint type="Stand" x="33454" y="31724" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33454" y="31724" z="8" rangeX="1" rangeY="1" label="CheckEnterSpawn" script="if not islocation(2) then&#10;   gotolabel(&quot;EnterSpawn&quot;, $wptsection)&#10;else&#10;   gotolabel(0, &quot;Hunt&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="33457" y="31724" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33457" y="31724" z="8" rangeX="1" rangeY="1" label="CheckEast" script="if getuseroption(&quot;East&quot;) then&#10;   return&#10;else&#10;   gotolabel(&quot;SkipEast&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Node" x="33462" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33467" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33472" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33476" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33470" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33459" y="31721" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31727" z="8" rangeX="1" rangeY="1" label="SkipEast"/>
            <Waypoint type="Node" x="33455" y="31731" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31736" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31740" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31744" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31749" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33455" y="31749" z="8" rangeX="1" rangeY="1" label="CheckDeep" script="if getuseroption(&quot;Deep&quot;) then&#10;   return&#10;else&#10;   gotolabel(&quot;SkipDeep&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Node" x="33455" y="31755" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31760" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31746" z="8" rangeX="1" rangeY="1" label="SkipDeep"/>
            <Waypoint type="Node" x="33455" y="31738" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33455" y="31730" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33455" y="31730" z="8" rangeX="1" rangeY="1" script="gotolabel(0, $wptsection)"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="33454" y="31724" z="8" rangeX="1" rangeY="1" label="Leave"/>
            <Waypoint type="Stand" x="33454" y="31723" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33458" y="31722" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33458" y="31722" z="9" rangeX="1" rangeY="1" label="CheckLeave" script="if not islocation(2) then&#10;   gotolabel(&quot;Leave&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33458" y="31722" z="9" rangeX="1" rangeY="1" label="LuredMejbiBejbi" script="if not lowsupplies() then&#10;   setsetting('Targeting/Creatures/Category A_1/Setting1/OnlyIfTrapped', 'no') &#10;   setsetting('Targeting/Creatures/Category A_2+/Setting1/OnlyIfTrapped', 'no')&#10;   wait(60*1000, 90*1000)&#10;   gotolabel(&quot;Backpacks&quot;, &quot;ToSpawn&quot;)&#10;else&#10;   return&#10;end"/>
            <Waypoint type="Stand" x="33460" y="31717" z="9" rangeX="1" rangeY="1" label="ToDepot"/>
            <Waypoint type="Stand" x="33460" y="31715" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31896" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31896" z="6" rangeX="1" rangeY="1" label="CheckToDepot" script="if not islocation(2) then&#10;   gotolabel(&quot;ToDepot&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Action" x="33626" y="31896" z="6" rangeX="1" rangeY="1" label="CheckJewels" script="if getuseroption(&quot;SellJewels&quot;) then&#10;   return&#10;else&#10;   gotolabel(&quot;EnterDepot&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33625" y="31892" z="6" rangeX="2" rangeY="1" label="GoJewels"/>
            <Waypoint type="Stand" x="33625" y="31891" z="6" rangeX="2" rangeY="1"/>
            <Waypoint type="Stand" x="33624" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33623" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33624" y="31892" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33624" y="31892" z="4" rangeX="1" rangeY="1" script="local categoryStack = 'a'&#10;local categoryNonStack = 'b'&#10;local items = {}&#10;&#10;npctalk('hi', 'trade') wait(500,1000)&#10;&#10;foreach lootingitem m 'ab' do&#10;  table.insert(items, m.id)&#10;end&#10;&#10;for _, sellItems in ipairs(items) do&#10;  while tradecount('sell', sellItems) &gt; 0 do&#10;    sellitems(sellItems, tradecount('sell', sellItems))&#10;  end&#10;end"/>
            <Waypoint type="Stand" x="33623" y="31891" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33623" y="31890" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31894" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31894" z="6" rangeX="1" rangeY="1" label="CheckGoJewels" script="if not islocation(2) then&#10;   gotolabel(&quot;GoJewels&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33628" y="31895" z="6" rangeX="1" rangeY="1" label="EnterDepot"/>
            <Waypoint type="Stand" x="33624" y="31893" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33624" y="31893" z="7" rangeX="1" rangeY="1" label="CheckEnterDepotLoop" script="if not islocation(2) then&#10;   gotolabel(&quot;EnterDepot&quot;, $wptsection)&#10;else&#10;   gotolabel(&quot;AtDepot&quot;, &quot;AtDepot&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Train">
            <Waypoint type="Stand" x="33625" y="31890" z="5" rangeX="1" rangeY="1" label="FromBank"/>
            <Waypoint type="Stand" x="33625" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33625" y="31897" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33618" y="31899" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33618" y="31899" z="6" rangeX="1" rangeY="1" label="CheckFromBank" script="if not islocation(2) then&#10;   gotolabel(&quot;FromBank&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33611" y="31899" z="6" rangeX="1" rangeY="1" label="ToTrain"/>
            <Waypoint type="Stand" x="33610" y="31899" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33602" y="31900" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33602" y="31900" z="7" rangeX="1" rangeY="1" label="CheckToTrain" script="if not islocation(2) then&#10;   gotolabel(&quot;ToTrain&quot;, $wptsection)&#10;end"/>
            <Waypoint type="Stand" x="33600" y="31900" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33600" y="31901" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33603" y="31901" z="7" rangeX="1" rangeY="1" label="Message" script="messagebox(&quot;You're training offline now, don't worry&quot;)&#10;setsetting('Alerts/DisableSounds', 'yes')&#10;setcavebot(&quot;no&quot;)&#10;wait(1000)"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="no">
        <Options>
            <Option range="20"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="no"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="1"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="yes"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Loot After All Dead"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="demon backpack"/>
                <lootingDestination name="lootbp" destination="blue backpack"/>
                <lootingDestination name="goldbp" destination="brocade backpack"/>
                <lootingDestination name="suppbp" destination="zaoan chess box"/>
                <lootingDestination name="maindpbp" destination="brown backpack"/>
                <lootingDestination name="rarebp" destination="grey backpack"/>
                <lootingDestination name="stackbp" destination="beach backpack"/>
                <lootingDestination name="ringbp" destination="green backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="c" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="c" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small topaz" id="9057" sellPrice="200" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small amethyst" id="3033" sellPrice="200" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="death ring" id="6299" sellPrice="1000" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="steel boots" id="3554" sellPrice="30000" weight="29.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="demonic essence" id="6499" sellPrice="1000" weight="1.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="skull helmet" id="5741" sellPrice="40000" weight="42.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="onyx flail" id="7421" sellPrice="22000" weight="26.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="nightmare blade" id="7418" sellPrice="35000" weight="46.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mystical hourglass" id="9660" sellPrice="700" weight="0.96" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="metal spike" id="10298" sellPrice="320" weight="0.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glacier kilt" id="823" sellPrice="11000" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="vile axe" id="7388" sellPrice="30000" weight="52.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="golden legs" id="3364" sellPrice="30000" weight="56.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="dreaded cleaver" id="7419" sellPrice="15000" weight="38.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="hellspawn tail" id="10304" sellPrice="475" weight="1.25" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="dracoyle statue" id="9035" sellPrice="5000" weight="15.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="butcher's axe" id="7412" sellPrice="18000" weight="63.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold ingot" id="9058" sellPrice="5000" weight="18.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="berserk potion" id="7439" sellPrice="500" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="cat's paw" id="5479" sellPrice="2000" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="black skull" id="9056" sellPrice="4000" weight="24.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="skullcracker armor" id="8061" sellPrice="18000" weight="110.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="underworld rod" id="8082" sellPrice="4400" weight="29.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="chaos mace" id="7427" sellPrice="9000" weight="63.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="soul orb" id="5944" sellPrice="25" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="giant sword" id="3281" sellPrice="17000" weight="180.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spiked squelcher" id="7452" sellPrice="5000" weight="68.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="warrior helmet" id="3369" sellPrice="5000" weight="68.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="knight legs" id="3371" sellPrice="5000" weight="70.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rusty armor (rare)" id="8896" sellPrice="0" weight="120.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ultimate health potion" id="7643" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="burst arrow" id="3449" sellPrice="0" weight="0.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="jewelled backpack" id="5801" sellPrice="500" weight="17.00" destinationName="mainbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="assassin star" id="7368" sellPrice="0" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="orichalcum pearl" id="5021" sellPrice="0" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great mana potion" id="238" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great health potion" id="239" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="concentrated demonic blood" id="6558" sellPrice="0" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="strong health potion" id="236" sellPrice="0" weight="2.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="strong mana potion" id="237" sellPrice="0" weight="2.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown armor" id="3381" sellPrice="12000" weight="99.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="golden armor" id="3360" sellPrice="20000" weight="80.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown legs" id="3382" sellPrice="12000" weight="65.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="yes"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Sorcerer, Druid" level="267" isCurrentProfile="yes">
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="prismatic bolt" id="16141" buyPrice="20" weight="0.85" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="prismatic bolt" category=""/>
            <SupplyItem name="crystalline arrow" id="15793" buyPrice="20" weight="0.75" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="crystalline arrow" category=""/>
            <SupplyItem name="assassin star" id="7368" buyPrice="100" weight="2.00" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="assassin star" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="yes" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Paladin, Sorcerer, Druid" level="267" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="10"/>
                <Priority danger="0"/>
                <Priority random="0"/>
                <Priority lure="75"/>
                <Priority stick="0"/>
            </Priorities>
            <Creatures>
                <Creature name="Category A" amount="1" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Wait &amp; Lure &amp; Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Category A" amount="2+" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Wait &amp; Lure &amp; Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Dark Torturer" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Destroyer" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Hellspawn" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Grim Reaper" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
